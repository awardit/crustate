{
  "name": "crustate",
  "version": "0.1.1",
  "description": "Crustate is a message-based modular state-management library.",
  "keywords": [
    "elm",
    "flux",
    "functional",
    "immutable",
    "message",
    "react",
    "reactjs",
    "server-side-rendering",
    "ssr",
    "state"
  ],
  "authors": [
    "Martin Wernst√•l <m4rw3r@gmail.com>"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/crossroads-loyalty-solutions/crustate.git"
  },
  "bugs": "https://github.com/crossroads-loyalty-solutions/crustate/issues",
  "homepage": "https://github.com/crossroads-loyalty-solutions/crustate",
  "license": "MIT",
  "files": [
    "dist",
    "preact/dist",
    "preact/package.json",
    "preact/src",
    "react/dist",
    "react/package.json",
    "react/src",
    "src"
  ],
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "source": "src/index.js",
  "scripts": {
    "build": "npm-run-all build:*",
    "build:rollup": "rollup -c rollup.config.js",
    "build:flowstub": "cp build/flowstub.js dist/index.js.flow && cp build/flowstub.js dist/index.mjs.flow && cp build/flowstub.js react/dist/index.js.flow && cp build/flowstub.js react/dist/index.mjs.flow && cp build/flowstub.js preact/dist/index.js.flow && cp build/flowstub.js preact/dist/index.mjs.flow",
    "clean": "rm -rf dist react/dist preact/dist examples/blog/dist examples/counter/dist examples/todomvc/dist",
    "coverage": "nyc --reporter=html ava --verbose",
    "dist": "cross-env NODE_ENV=production npm run build",
    "distclean": "rm -rf package-lock.json node_modules dist react/dist preact/dist coverage .nyc_output examples/blog/dist examples/counter/dist examples/todomvc/dist",
    "examples": "node examples",
    "flow": "flow check",
    "prepack": "npm run clean && npm run test && npm run dist",
    "test": "npm-run-all test:*",
    "test:flow": "flow status",
    "test:ava": "ava --verbose",
    "test:xo": "xo",
    "watch": "nodemon -w src -w test -w react/src --exec \"npm run -q test || true\"",
    "watch:build": "rollup -c rollup.config.js -w",
    "watch:test": "nodemon -w src -w test -w react/src --exec \"npm run -q ava || true\"",
    "watch:coverage": "nodemon -w src -w test -w react/src --exec \"npm run -q coverage || true\""
  },
  "devDependencies": {
    "@ampproject/rollup-plugin-closure-compiler": "0.9.0",
    "@babel/core": "7.4.5",
    "@babel/plugin-proposal-class-properties": "7.4.4",
    "@babel/plugin-transform-classes": "7.4.4",
    "@babel/plugin-transform-destructuring": "7.4.4",
    "@babel/plugin-transform-flow-strip-types": "7.4.4",
    "@babel/preset-env": "7.4.5",
    "@babel/preset-react": "7.0.0",
    "@babel/register": "7.4.4",
    "@testing-library/react": "8.0.1",
    "ava": "2.1.0",
    "babel-eslint": "10.0.1",
    "classnames": "2.2.6",
    "cross-env": "5.2.0",
    "eslint-config-xo-flow": "0.1.0",
    "eslint-config-xo-react": "0.19.0",
    "eslint-plugin-flowtype": "3.10.3",
    "eslint-plugin-local": "1.0.0",
    "eslint-plugin-react": "7.13.0",
    "eslint-plugin-react-hooks": "1.6.0",
    "express": "4.17.1",
    "flow-bin": "0.101.0",
    "jsdom": "15.1.1",
    "ninos": "3.0.0",
    "nodemon": "1.19.1",
    "npm-run-all": "4.1.5",
    "nyc": "14.1.1",
    "preact": "10.0.0-beta.2",
    "react": "16.8.6",
    "react-dom": "16.8.6",
    "react-router": "5.0.1",
    "react-router-dom": "5.0.1",
    "rollup": "1.15.3",
    "rollup-plugin-alias": "1.5.2",
    "rollup-plugin-babel": "4.3.2",
    "rollup-plugin-commonjs": "10.0.0",
    "rollup-plugin-gzip": "2.2.0",
    "rollup-plugin-node-resolve": "5.0.2",
    "rollup-plugin-postcss": "2.0.3",
    "rollup-plugin-replace": "2.2.0",
    "todomvc-app-css": "2.2.0",
    "xo": "0.24.0"
  },
  "ava": {
    "babel": {
      "testOptions": {
        "presets": [
          [
            "@babel/preset-react"
          ],
          [
            "@babel/preset-env",
            {
              "loose": true,
              "shippedProposals": true,
              "targets": {
                "node": "current",
                "firefox": "50",
                "ie": "11"
              },
              "exclude": [
                "transform-typeof-symbol"
              ]
            }
          ]
        ],
        "plugins": [
          [
            "@babel/plugin-transform-flow-strip-types"
          ],
          [
            "@babel/plugin-proposal-class-properties",
            {
              "loose": true
            }
          ]
        ]
      }
    },
    "files": [
      "**/*.test.js"
    ],
    "sources": [
      "src/**/*.js",
      "**/src/**/*.js"
    ],
    "require": [
      "./test/_register"
    ],
    "powerAssert": true
  },
  "xo": {
    "extends": [
      "xo-flow",
      "xo-react"
    ],
    "ignores": [
      "build",
      "**/rollup.config.js"
    ],
    "envs": [
      "node",
      "browser"
    ],
    "overrides": [
      {
        "files": "test/*.js",
        "rules": {
          "flowtype/require-parameter-type": "off",
          "flowtype/require-return-type": "off",
          "flowtype/no-unused-expressions": "off",
          "no-unused-expressions": "off",
          "quote-props": "off"
        }
      },
      {
        "files": "examples/**/*.js",
        "rules": {
          "flowtype/require-parameter-type": "warn",
          "flowtype/require-return-type": "off"
        }
      }
    ],
    "plugins": [
      "eslint-plugin-local"
    ],
    "rules": {
      "ava/use-test": "off",
      "brace-style": [
        "error",
        "stroustrup"
      ],
      "comma-dangle": [
        "error",
        {
          "arrays": "only-multiline",
          "objects": "only-multiline",
          "imports": "never",
          "exports": "never",
          "functions": "never"
        }
      ],
      "keyword-spacing": [
        "error",
        {
          "after": true,
          "overrides": {
            "catch": {
              "after": false
            },
            "if": {
              "after": false
            },
            "for": {
              "after": false
            },
            "switch": {
              "after": false
            },
            "while": {
              "after": false
            }
          }
        }
      ],
      "eol-last": [
        "error",
        "never"
      ],
      "flowtype/array-style-simple-type": [
        "error",
        "verbose"
      ],
      "flowtype/delimiter-dangle": [
        "error",
        "only-multiline"
      ],
      "flowtype/newline-after-flow-annotation": [
        "error",
        "always"
      ],
      "flowtype/require-types-at-top": "warn",
      "flowtype/require-valid-file-annotation": [
        "error",
        "always",
        {
          "annotationStyle": "block"
        }
      ],
      "flowtype/require-return-type": [
        "error",
        "always",
        {
          "annotateUndefined": "always"
        }
      ],
      "flowtype/type-import-style": [
        "error",
        "declaration"
      ],
      "import/no-unresolved": "off",
      "import/order": "off",
      "indent": [
        "warn",
        2,
        {
          "ImportDeclaration": "first"
        }
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ],
      "local/space-in-parens": [
        "error",
        "never",
        {
          "exceptions": [
            "!"
          ]
        }
      ],
      "no-case-declarations": "off",
      "no-unused-vars": [
        "error",
        {
          "varsIgnorePattern": "^React$"
        }
      ],
      "object-curly-spacing": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "double",
        {
          "allowTemplateLiterals": true
        }
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "closingSlash": "never",
          "beforeSelfClosing": "always",
          "afterOpening": "never",
          "beforeClosing": "never"
        }
      ],
      "space-in-parens": "off",
      "space-unary-ops": [
        "error",
        {
          "overrides": {
            "!": true
          }
        }
      ],
      "unicorn/catch-error-name": [
        "error",
        {
          "name": "e"
        }
      ],
      "valid-jsdoc": "off"
    },
    "space": 2
  }
}
