{
  "name": "crustate",
  "version": "0.9.0",
  "description": "Crustate is a message-based modular state-management library.",
  "keywords": [
    "elm",
    "flux",
    "functional",
    "immutable",
    "message",
    "react",
    "reactjs",
    "server-side-rendering",
    "ssr",
    "state"
  ],
  "authors": [
    "Martin Wernst√•l <m4rw3r@gmail.com>"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/awardit/crustate.git"
  },
  "bugs": "https://github.com/awardit/crustate/issues",
  "homepage": "https://github.com/awardit/crustate",
  "license": "MIT",
  "files": [
    "dist",
    "preact/dist",
    "preact/package.json",
    "preact/src",
    "react/dist",
    "react/package.json",
    "react/src",
    "src"
  ],
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "source": "src/index.js",
  "sideEffects": false,
  "scripts": {
    "build": "npm-run-all build:*",
    "build:rollup": "npm-run-all -p build:rollup:*",
    "build:rollup:crustate": "rollup -c rollup.config.js",
    "build:rollup:react": "rollup -c react/rollup.config.js",
    "build:rollup:preact": "rollup -c preact/rollup.config.js",
    "build:examples": "npm-run-all -p build:examples:*",
    "build:examples:blog": "rollup -c examples/blog/rollup.config.js",
    "build:examples:counter": "rollup -c examples/counter/rollup.config.js",
    "build:examples:todomvc": "rollup -c examples/todomvc/rollup.config.js",
    "build:flowstub": "cp build/stub/flow.js dist/cjs/index.js.flow && cp build/stub/flow.js dist/esm/index.js.flow && cp build/stub/flow.js react/dist/cjs/index.js.flow && cp build/stub/flow.js react/dist/esm/index.js.flow && cp build/stub/flow.js preact/dist/cjs/index.js.flow && cp build/stub/flow.js preact/dist/esm/index.js.flow",
    "clean": "rm -rf dist react/dist preact/dist examples/blog/dist examples/counter/dist examples/todomvc/dist",
    "coverage": "nyc --reporter=html ava --verbose",
    "distclean": "rm -rf package-lock.json node_modules dist react/dist preact/dist coverage .nyc_output examples/blog/dist examples/counter/dist examples/todomvc/dist",
    "examples": "node examples",
    "flow": "flow check",
    "prepack": "npm run clean && npm run test && npm run build",
    "test": "npm-run-all test:*",
    "test:flow": "flow status",
    "test:build": "npm run build",
    "test:ava": "ava --verbose",
    "test:xo": "xo",
    "watch": "nodemon -w src -w test -w react/src --exec \"npm run -q test || true\"",
    "watch:build": "rollup -c rollup.config.js -w",
    "watch:test": "nodemon -w src -w test -w react/src --exec \"npm run -q ava || true\"",
    "watch:coverage": "nodemon -w src -w test -w react/src --exec \"npm run -q coverage || true\""
  },
  "devDependencies": {
    "@ava/babel": "^1.0.1",
    "@babel/core": "^7.10.2",
    "@babel/plugin-proposal-class-properties": "^7.10.1",
    "@babel/plugin-transform-classes": "^7.10.1",
    "@babel/plugin-transform-destructuring": "^7.10.1",
    "@babel/plugin-transform-flow-strip-types": "^7.10.1",
    "@babel/preset-env": "^7.10.2",
    "@babel/preset-react": "^7.10.1",
    "@babel/register": "^7.10.1",
    "@rollup/plugin-alias": "^3.1.1",
    "@rollup/plugin-babel": "^5.0.3",
    "@rollup/plugin-commonjs": "^17.0.0",
    "@rollup/plugin-node-resolve": "^11.0.0",
    "@rollup/plugin-replace": "^2.3.3",
    "@testing-library/react": "^11.0.0",
    "ava": "^3.9.0",
    "babel-eslint": "^10.1.0",
    "babel-plugin-transform-async-to-promises": "^0.8.15",
    "classnames": "^2.2.6",
    "cross-env": "^7.0.2",
    "eslint-config-xo-flow": "^0.2.0",
    "eslint-config-xo-react": "^0.23.0",
    "eslint-plugin-flowtype": "^5.1.3",
    "eslint-plugin-react": "^7.20.0",
    "eslint-plugin-react-hooks": "^4.0.4",
    "express": "^4.17.1",
    "flow-bin": "^0.145.0",
    "jsdom": "^16.2.2",
    "ninos": "^3.0.0",
    "nodemon": "^2.0.4",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "postcss": "^8.0.0",
    "preact": "^10.4.4",
    "react": "^17.0.0",
    "react-dom": "^17.0.0",
    "react-router": "^5.2.0",
    "react-router-dom": "^5.2.0",
    "rollup": "^2.16.1",
    "rollup-plugin-postcss": "^4.0.0",
    "todomvc-app-css": "^2.3.0",
    "xo": "^0.32.0"
  },
  "xo": {
    "extends": [
      "xo-flow",
      "xo-react"
    ],
    "ignores": [
      "build/externs",
      "build/exports"
    ],
    "overrides": [
      {
        "files": [
          "build/*.js",
          "rollup.config.js",
          "**/*/rollup.config.js"
        ],
        "rules": {
          "flowtype/require-parameter-type": "off",
          "flowtype/require-return-type": "off",
          "flowtype/require-valid-file-annotation": "off",
          "camelcase": "off"
        }
      },
      {
        "files": "test/*.js",
        "rules": {
          "flowtype/require-parameter-type": "off",
          "flowtype/require-return-type": "off",
          "flowtype/no-unused-expressions": "off",
          "no-unused-expressions": "off",
          "quote-props": "off"
        }
      },
      {
        "files": "examples/**/*.js",
        "envs": [
          "node",
          "browser"
        ],
        "rules": {
          "flowtype/require-parameter-type": "off",
          "flowtype/require-return-type": "off"
        }
      },
      {
        "files": "**/*.config.js",
        "rules": {
          "import/no-anonymous-default-export": "off"
        }
      }
    ],
    "rules": {
      "ava/use-test": "off",
      "brace-style": [
        "error",
        "stroustrup"
      ],
      "comma-dangle": [
        "error",
        {
          "arrays": "always-multiline",
          "objects": "always-multiline",
          "imports": "always-multiline",
          "exports": "always-multiline",
          "functions": "never"
        }
      ],
      "flowtype/array-style-complex-type": [
        "error",
        "verbose"
      ],
      "flowtype/array-style-simple-type": [
        "error",
        "verbose"
      ],
      "flowtype/delimiter-dangle": [
        "error",
        "always-multiline"
      ],
      "flowtype/newline-after-flow-annotation": [
        "error",
        "always"
      ],
      "flowtype/require-types-at-top": "warn",
      "flowtype/require-valid-file-annotation": [
        "error",
        "always",
        {
          "annotationStyle": "block"
        }
      ],
      "flowtype/require-return-type": [
        "error",
        "always",
        {
          "annotateUndefined": "always"
        }
      ],
      "flowtype/type-import-style": [
        "error",
        "declaration"
      ],
      "import/no-extraneous-dependencies": [
        "error",
        {
          "packageDir": [
            "."
          ]
        }
      ],
      "import/no-unassigned-import": [
        "error",
        {
          "allow": [
            "**/*.css",
            "**/*.scss"
          ]
        }
      ],
      "import/no-unresolved": "off",
      "import/order": "off",
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ],
      "max-len": [
        "error",
        {
          "code": 100,
          "comments": 80,
          "ignoreStrings": true
        }
      ],
      "no-case-declarations": "off",
      "no-labels": "off",
      "no-unused-vars": [
        "error",
        {
          "varsIgnorePattern": "^React$"
        }
      ],
      "no-useless-constructor": "off",
      "object-curly-spacing": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "double",
        {
          "allowTemplateLiterals": true
        }
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "closingSlash": "never",
          "beforeSelfClosing": "always",
          "afterOpening": "never",
          "beforeClosing": "never"
        }
      ],
      "react/prefer-read-only-props": "off",
      "react/require-default-props": "off",
      "unicorn/catch-error-name": [
        "error",
        {
          "name": "e"
        }
      ],
      "unicorn/no-fn-reference-in-iterator": "off",
      "unicorn/no-reduce": "off",
      "unicorn/prefer-includes": "off",
      "unicorn/prevent-abbreviations": "off",
      "valid-jsdoc": "off"
    },
    "space": 2
  }
}
